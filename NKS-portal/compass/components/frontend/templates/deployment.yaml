apiVersion: apps/v1
kind: Deployment
metadata:
  name: nks-frontend
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount.frontend }}
  selector:
    matchLabels:
      io.kompose.service: frontend
  template:
    metadata:
      labels:
        io.kompose.service: frontend
    spec:
      containers:
      - env:
        - name: KUBEGUARDIAN_API_BASE_URL
          value: ""
        - name: KUBEGUARDIAN_AUTH_URL
          value: /auth
        - name: KUBEGUARDIAN_AUTH_REALM
          value: {{ .Values.global.realm }}
        - name: KUBEGUARDIAN_AUTH_CLIENT_ID
          value: controller
        - name: KUBEGUARDIAN_THEME
          value: NIC
        - name: KUBEGUARDIAN_IS_CC_ENABLED
          value: "true"
        - name: KUBEGUARDIAN_RR_ENABLED
          value: "false"
        {{- if .Values.usev1 }}
        - name: KUBEGUARDIAN_V2_ENABLED
          value: "false"
        {{- end }}
        image: {{ .Values.global.repository }}/frontend:{{ include "helper.imageTag" . }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        name: nks-frontend
        ports:
        - containerPort: 80
          name: 80tcp2
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/tcp_conf.d
          readOnly: true
          name: default-tcp-conf
        - mountPath: /etc/nginx/conf.d
          readOnly: true
          name: default-conf
        - name: frontend-certs-vol
          readOnly: true
          mountPath: /etc/nginx/certs/ingress
      dnsPolicy: ClusterFirst
      volumes:
      - name: default-tcp-conf
        configMap:
          name: frontend-tcp-config
      - name: default-conf
        configMap:
          name: frontend-config
      - name: frontend-certs-vol
        secret:
          {{- if .Values.global.frontend.certs.external }}
          secretName: {{ .Values.global.frontend.certs.external }}
          {{- else }}
          secretName: frontend-certs
          {{- end}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: observability-ui
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      kg-app: observability-ui
  template:
    metadata:
      labels:
        kg-app: observability-ui
    spec:
      containers:
      - image: {{ .Values.global.repository }}/observability:{{ include "helper.imageTag" . }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: observability-ui
        ports:
        - containerPort: 80
          protocol: TCP
      dnsPolicy: ClusterFirst
